#!/usr/bin/perl
# This script parses files generated by timelog.pl
use strict;
use POSIX qw(strftime);

my %matchgroups = (
	browser => ".*Chromium",
	terminal => "QTerminal",
	editor => ".*SciTE",
	mail => ".*Thunderbird"
);

sub secfmt {
	strftime("%T", gmtime(shift));
}

my ($file) = @ARGV;
open my $log, $file or die "Could not open $file: $!\n";

my $laststamp = -1;
my @oldentry;
my %actsum;
my %acttagsum;
my %acttagtitlesum;
my %titlesum;

while (<$log>)  {
	chomp;
	my @entry = split /\t/;
	if (@oldentry) {
		my ($date, $time, $stamp, $act, $tag, $title) = @oldentry;
		my $spent = @entry[2] - $stamp;
		while (my ($name, $regex) = each %matchgroups)
		{
			$title = $name if $title =~ /$regex/;
		}
		my $at = "$act,,,$tag";
		my $att = "$at,,,$title";
		for ($actsum{$act}, $acttagsum{$at}, $acttagtitlesum{$att}, $titlesum{$title}) {
			$_ = ($_ + $spent);
		}
	}
	@oldentry = @entry;
}

print "============================ Activities ============================\n";
foreach my $act (sort { $actsum{$b} <=> $actsum{$a} } keys %actsum) {
	printf "%s %s\n", secfmt($actsum{$act}), $act;

	my @tagkeys = sort { $acttagsum{$b} <=> $acttagsum{$a} } grep { /^$act/ } keys %acttagsum;
	foreach my $at (@tagkeys) {
		printf "\t%s %s\n", secfmt($acttagsum{$at}), (split /,,,/, $at, 2)[1];
		my @ttkeys = sort { $acttagtitlesum{$b} <=> $acttagtitlesum{$a} } grep { /^$at/ } keys %acttagtitlesum;
		foreach my $att (@ttkeys) {
			printf "\t\t%s %s\n", secfmt($acttagtitlesum{$att}), (split /,,,/, $att, 3)[2];
		}
	}
}

print "=========================== Applications ===========================\n";
foreach my $title (sort { $titlesum{$b} <=> $titlesum{$a} } keys %titlesum) {
	printf "%s %s\n", secfmt($titlesum{$title}), $title;
}
